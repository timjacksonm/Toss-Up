generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  token_type        String?  @map("tokenType")
  refresh_token     String?  @map("refreshToken") @db.String
  access_token      String?  @map("accessToken") @db.String
  id_token          String?  @map("idToken") @db.String
  expires_at        Int?     @map("expiresAt")
  scope             String?
  session_state     String?
  createdAt         DateTime @default(now())
  lastModified      DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  username      String?
  name          String?
  firstName     String?
  lastName      String?
  password      String?
  email         String   @unique
  emailVerified Boolean?
  image         String?
  createdAt     DateTime @default(now())
  lastModified  DateTime @updatedAt

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
